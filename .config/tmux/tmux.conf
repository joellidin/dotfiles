set -ga terminal-overrides ",xterm-256color*:Tc"

unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

set -g status-style 'bg=#333333 fg=#5eacd3'
set -g status-left-length 20

bind r source-file ~/.config/tmux/tmux.conf
set -g base-index 1

set-window-option -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# for neovim
set -g focus-events on

# vim-like pane switching
bind -r ^ last-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

bind -r D neww -n "ipython" -c "#{pane_current_path}" " \
if [ -d .venv ]; then \
    source .venv/bin/activate; \
fi; \
if [[ \"$(pwd)\" == \"/home/jlidin/Documents/vision-inspector\"* ]]; then \
    ipython --profile=vision_inspector; \
else \
    ipython; \
fi"
bind -r c neww -n "zsh" "zsh" \; send-keys "if [ -d .venv ]; then source .venv/bin/activate; fi" ENTER "clear" ENTER
bind -r t display-popup -h 90% -w 90% -T pytest -S "fg=yellow" -E "bash -c 'if [ -d .venv ]; then source .venv/bin/activate && FORCE_COLOR=1 pytest | bat --color=always; fi; read -p \"Press enter to close...\"'"
bind -r l display-popup -h 90% -w 90% -T ruff -S "fg=yellow" -E "bash -c 'if [ -d .venv ]; then source .venv/bin/activate && FORCE_COLOR=1 ruff check --preview | bat --color=always; fi; read -p \"Press enter to close...\"'"

# forget the find window.  That is for chumps
bind-key -r f display-popup -h 75% -w 75% -T sessionizer -S "fg=green" -E "~/.local/bin/tmux-sessionizer"

bind-key -r i run-shell "tmux neww tmux-cht.sh"

set -s escape-time 0
set-option -gw xterm-keys on

# # vim-like pane switching even when vim is running
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
#
# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R

set -g allow-passthrough on

set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'catppuccin/tmux'

# catppuccin
set -g @catppuccin_window_left_separator " █"
set -g @catppuccin_window_right_separator "█"
set -g @catppuccin_window_number_position "left"
set -g @catppuccin_window_middle_separator "█ "

set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"

set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W"

set -g @catppuccin_status_modules_right "date"
set -g @catppuccin_status_modules_left "session"
set -g @catppuccin_status_left_separator  "█"
set -g @catppuccin_status_right_separator "█"
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_fill "all"
set -g @catppuccin_status_connect_separator "no"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm'
